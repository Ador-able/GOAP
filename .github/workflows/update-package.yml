name: Update package
on:
  workflow_dispatch:

jobs:
  update_versions:
    permissions:
      # write permission is required to create a github release
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          ref: 'master'

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          
      # Release Drafter step should come after the package.json update
      - name: Fetch releases
        id: fetch_releases
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get draft release version
        id: draft_version
        run: |
          DRAFT_RELEASE=$(echo '${{ steps.fetch_releases.outputs.data }}' | jq '[.[] | select(.draft == true)][0]')
          VERSION=$(echo "$DRAFT_RELEASE" | jq -r '.tag_name')
          echo "Draft release version is $VERSION"
          echo "::set-output name=version::$VERSION"

      - name: Update version in package.json
        run: |
          jq '.version = "${{ steps.draft_version.outputs.version }}"' Package/package.json > temp.json && mv temp.json Package/package.json

      - name: Replace specific line in readme.md
        run: |
          awk '{ if ($0 ~ /^https:\/\/github\.com\/crashkonijn\/GOAP\.git\?path=\/Package/) print "https://github.com/crashkonijn/GOAP.git?path=/Package#${{ steps.draft_version.outputs.version }}"; else print $0; }' readme.md > readme.tmp && mv readme.tmp readme.md
        shell: bash
        
      - name: Replace specific line in Package/Documentation/Introduction/GettingStarted.md
        run: |
          awk '{ if ($0 ~ /^https:\/\/github\.com\/crashkonijn\/GOAP\.git\?path=\/Package/) print "https://github.com/crashkonijn/GOAP.git?path=/Package#${{ steps.draft_version.outputs.version }}"; else print $0; }' Package/Documentation/Introduction/GettingStarted.md > readme.tmp && mv readme.tmp Package/Documentation/Introduction/GettingStarted.md
        shell: bash

      - name: Commit and push if there are changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add Package/package.json
          git add readme.md
          git add Package/Documentation/Introduction/GettingStarted.md
          # Check if there are any changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update version to ${{ steps.draft_version.outputs.version }}"
            git push
          fi
  build_demo_files:
    needs:
      - update_versions
    runs-on: ubuntu-latest
    permissions:
      # write permission is required to create a github release
      contents: write
    steps:
      - uses: actions/checkout@v2
      - run: |
          cd Demo
          echo "Assets/CrashKonijn.meta" > metaList
          find Assets/CrashKonijn/ -name \*.meta >> metaList
          echo "Contents of metaList:"
          cat metaList
          
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            workflows:
              - 'Demo/Assets/CrashKonijn/**'

      - uses: crashkonijn/create-unitypackage@master
        if: steps.filter.outputs.workflows == 'true'
        with:
          package-path: 'Package/Samples~/default/demo.unitypackage'
          include-files: Demo/metaList
          project-folder: 'Demo/'

      - name: Commit and push
        if: steps.filter.outputs.workflows == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add Package/Samples~/default/demo.unitypackage
          git commit -m "Updated demo"
          git push
